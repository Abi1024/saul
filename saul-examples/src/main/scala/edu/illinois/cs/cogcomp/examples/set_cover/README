This example contains the Saul implementation of the solution to a set cover
problem. The particular problem comes from the following web page, in which
the problem is formulated as an Integer Linear Program. In Saul as in LBJava, we'll write
the constraints in First Order Logic, and they'll be translated into the same
linear inequalities shown on the web page:
http://mat.gsia.cmu.edu/orclass/integer/node8.html

Packing List:
The data is in: saulexamplespackage/data/example.txt

The reader and the data structure files: 

saulexamplespackage/src/main/java/edu/illinois/cs/cogcomp/ilp/City.java
saulexamplespackage/src/main/java/edu/illinois/cs/cogcomp/ilp/ContainsStation.java
saulexamplespackage/src/main/java/edu/illinois/cs/cogcomp/ilp/Neighborhood.java
saulexamplespackage/src/main/java/edu/illinois/cs/cogcomp/ilp/SetCoverSolver.java
saulexamplespackage/src/main/java/edu/illinois/cs/cogcomp/ilp/DumbLearner.java

The LBjava version left here for comparison to Saul: 
/saulexamplespackage/src/main/scala/edu/illinois/cs/cogcomp/examples/set_cover/SetCover.lbj 

The one file Scala formulation of the constraints that runs without the compilation step compared to LBjava version:
/saulexamplespackage/src/main/scala/edu/illinois/cs/cogcomp/examples/set_cover/SetCoverSolver.scala 

This file: /saulexamplespackage/src/main/scala/edu/illinois/cs/cogcomp/examples/set_cover/README

Description:

Classes City and Neighborhood are used as the internal representation of our
problem's data.  An instance of class City will become the "head" object of an
inference problem, which means that it contains all the data needed to
represent that inference problem.  Instances of class Neighborhood are the
ones we need to classify.

The DumbLearner and ContainsStation classes are hand written classes that
implement an unconstrained learner.  Normally, we would use Saul to learn such
a classifier, but there was nothing to learn in this case.  The SetCoverSolver.scala
code then operates on ContainsStation and respects the constraints.

SetCoverSolver is a program that takes raw data representing a City as input
and produces the constrained predictions.

the program uses the simple example problem in example.txt.  Just run the
